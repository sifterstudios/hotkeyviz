Comment toggle linewisev  <C-Y>c        <Plug>(emmet-code-pretty)v  <Plug>(emmet-code-pretty) * :call emmet#codePretty()<CR>n  <C-Y>m        <Plug>(emmet-merge-lines)n  <Plug>(emmet-merge-lines) * :call emmet#mergeLines()<CR>n  <C-Y>A        <Plug>(emmet-anchorize-summary)n  <Plug>(emmet-anchorize-summary) * :call emmet#anchorizeURL(1)<CR>n  <C-Y>a        <Plug>(emmet-anchorize-url)n  <Plug>(emmet-anchorize-url) * :call emmet#anchorizeURL(0)<CR>n  <C-Y>k        <Plug>(emmet-remove-tag)n  <Plug>(emmet-remove-tag) * :call emmet#removeTag()<CR>n  <C-Y>j        <Plug>(emmet-split-join-tag)n  <Plug>(emmet-split-join-tag) * :call emmet#splitJoinTag()<CR>n  <C-Y>/        <Plug>(emmet-toggle-comment)n  <Plug>(emmet-toggle-comment) * :call emmet#toggleComment()<CR>n  <C-Y>I        <Plug>(emmet-image-encode)n  <Plug>(emmet-image-encode) * :call emmet#imageEncode()<CR>n  <C-Y>i        <Plug>(emmet-image-size)n  <Plug>(emmet-image-size) * :call emmet#imageSize()<CR>n  <Plug>(emmet-move-prev-item) * :call emmet#moveNextPrevItem(1)<CR>n  <Plug>(emmet-move-next-item) * :call emmet#moveNextPrevItem(0)<CR>n  <C-Y>N        <Plug>(emmet-move-prev)n  <Plug>(emmet-move-prev) * :call emmet#moveNextPrev(1)<CR>n  <C-Y>n        <Plug>(emmet-move-next)n  <Plug>(emmet-move-next) * :call emmet#moveNextPrev(0)<CR>v  <C-Y>D        <Plug>(emmet-balance-tag-outword)v  <Plug>(emmet-balance-tag-outword) * <Esc>:call emmet#balanceTag(-1)<CR>n  <C-Y>D        <Plug>(emmet-balance-tag-outword)n  <Plug>(emmet-balance-tag-outword) * :call emmet#balanceTag(-1)<CR>v  <C-Y>d        <Plug>(emmet-balance-tag-inward)v  <Plug>(emmet-balance-tag-inward) * <Esc>:call emmet#balanceTag(1)<CR>n  <C-Y>d        <Plug>(emmet-balance-tag-inward)n  <Plug>(emmet-balance-tag-inward) * :call emmet#balanceTag(1)<CR>n  <C-Y>u        <Plug>(emmet-update-tag)n  <Plug>(emmet-update-tag) * :call emmet#updateTag()<CR>n  <C-Y>;        <Plug>(emmet-expand-word)n  <Plug>(emmet-expand-word) * :call emmet#expandAbbr(1,"")<CR>v  <C-Y>,        <Plug>(emmet-expand-abbr)v  <Plug>(emmet-expand-abbr) * :call emmet#expandAbbr(2,"")<CR>n  <C-Y>,        <Plug>(emmet-expand-abbr)n  <Plug>(emmet-expand-abbr) * :call emmet#expandAbbr(3,"")<CR>n  <Plug>(unimpaired-xml-decode-line) * <SNR>31_TransformSetup("xml_decode")."_"x  <Plug>(unimpaired-xml-decode) * <SNR>31_TransformSetup("xml_decode")n  <Plug>(unimpaired-xml-decode) * <SNR>31_TransformSetup("xml_decode")n  <Plug>unimpaired_line_xml_decode * <SNR>31_TransformSetup("xml_decode")."_"x  <Plug>unimpaired_xml_decode * <SNR>31_TransformSetup("xml_decode")n  <Plug>unimpaired_xml_decode * <SNR>31_TransformSetup("xml_decode")n  <Plug>(unimpaired-xml-encode-line) * <SNR>31_TransformSetup("xml_encode")."_"x  <Plug>(unimpaired-xml-encode) * <SNR>31_TransformSetup("xml_encode")n  <Plug>(unimpaired-xml-encode) * <SNR>31_TransformSetup("xml_encode")n  <Plug>unimpaired_line_xml_encode * <SNR>31_TransformSetup("xml_encode")."_"x  <Plug>unimpaired_xml_encode * <SNR>31_TransformSetup("xml_encode")n  <Plug>unimpaired_xml_encode * <SNR>31_TransformSetup("xml_encode")n  <Plug>(unimpaired-url-decode-line) * <SNR>31_TransformSetup("url_decode")."_"x  <Plug>(unimpaired-url-decode) * <SNR>31_TransformSetup("url_decode")n  <Plug>(unimpaired-url-decode) * <SNR>31_TransformSetup("url_decode")n  <Plug>unimpaired_line_url_decode * <SNR>31_TransformSetup("url_decode")."_"x  <Plug>unimpaired_url_decode * <SNR>31_TransformSetup("url_decode")n  <Plug>unimpaired_url_decode * <SNR>31_TransformSetup("url_decode")n  <Plug>(unimpaired-url-encode-line) * <SNR>31_TransformSetup("url_encode")."_"x  <Plug>(unimpaired-url-encode) * <SNR>31_TransformSetup("url_encode")n  <Plug>(unimpaired-url-encode) * <SNR>31_TransformSetup("url_encode")n  <Plug>unimpaired_line_url_encode * <SNR>31_TransformSetup("url_encode")."_"x  <Plug>unimpaired_url_encode * <SNR>31_TransformSetup("url_encode")n  <Plug>unimpaired_url_encode * <SNR>31_TransformSetup("url_encode")n  <Plug>(unimpaired-string-decode-line) * <SNR>31_TransformSetup("string_decode")."_"x  <Plug>(unimpaired-string-decode) * <SNR>31_TransformSetup("string_decode")n  <Plug>(unimpaired-string-decode) * <SNR>31_TransformSetup("string_decode")n  <Plug>unimpaired_line_string_decode * <SNR>31_TransformSetup("string_decode")."_"x  <Plug>unimpaired_string_decode * <SNR>31_TransformSetup("string_decode")n  <Plug>unimpaired_string_decode * <SNR>31_TransformSetup("string_decode")n  <Plug>(unimpaired-string-encode-line) * <SNR>31_TransformSetup("string_encode")."_"x  <Plug>(unimpaired-string-encode) * <SNR>31_TransformSetup("string_encode")n  <Plug>(unimpaired-string-encode) * <SNR>31_TransformSetup("string_encode")n  <Plug>unimpaired_line_string_encode * <SNR>31_TransformSetup("string_encode")."_"x  <Plug>unimpaired_string_encode * <SNR>31_TransformSetup("string_encode")n  <Plug>unimpaired_string_encode * <SNR>31_TransformSetup("string_encode")n  <Plug>unimpairedPutBelow * :call <SNR>31_putline(']p', 'below')<CR>n  <Plug>unimpairedPutAbove * :call <SNR>31_putline('[p', 'above')<CR>n  <Plug>(unimpaired-put-below-reformat) * :<C-U>call <SNR>31_putline(v:count1 . ']p', 'Below')<CR>=']n  <Plug>(unimpaired-put-above-reformat) * :<C-U>call <SNR>31_putline(v:count1 . '[p', 'Above')<CR>=']n  <Plug>(unimpaired-put-below-leftward) * :<C-U>call <SNR>31_putline(v:count1 . ']p', 'Below')<CR><']n  <Plug>(unimpaired-put-above-leftward) * :<C-U>call <SNR>31_putline(v:count1 . '[p', 'Above')<CR><']n  <Plug>(unimpaired-put-below-rightward) * :<C-U>call <SNR>31_putline(v:count1 . ']p', 'Below')<CR>>']n  <Plug>(unimpaired-put-above-rightward) * :<C-U>call <SNR>31_putline(v:count1 . '[p', 'Above')<CR>>']n  <Plug>(unimpaired-put-below) * :call <SNR>31_putline(']p', 'below')<CR>n  <Plug>(unimpaired-put-above) * :call <SNR>31_putline('[p', 'above')<CR>n  <Plug>(unimpaired-toggle)p & :<C-U>call <SNR>31_SetupPaste()<CR>0Cn  <Plug>(unimpaired-disable)p & :<C-U>call <SNR>31_SetupPaste()<CR>on  <Plug>(unimpaired-enable)p & :<C-U>call <SNR>31_SetupPaste()<CR>On  <Plug>(unimpaired-paste) & :<C-U>call <SNR>31_SetupPaste()<CR>n  <Plug>unimpairedPaste * :call <SNR>31_SetupPaste()<CR>n  <Plug>(unimpaired-toggle)t & :<C-U>set colorcolumn=<C-R>=<SNR>31_ColorColumn(!empty(&cc))<CR><CR>n  <Plug>(unimpaired-disable)t & :<C-U>set colorcolumn=<C-R>=<SNR>31_ColorColumn(1)<CR><CR>n  <Plug>(unimpaired-enable)t & :<C-U>set colorcolumn=<C-R>=<SNR>31_ColorColumn(0)<CR><CR>n  <Plug>(unimpaired-toggle)+ & :<C-U>set <C-R>=<SNR>31_CursorOptions()<CR><CR>n  <Plug>(unimpaired-disable)+ & :<C-U>set nocursorline nocursorcolumn<CR>n  <Plug>(unimpaired-enable)+ & :<C-U>set cursorline cursorcolumn<CR>n  <Plug>(unimpaired-toggle)x & :<C-U>set <C-R>=<SNR>31_CursorOptions()<CR><CR>n  <Plug>(unimpaired-disable)x & :<C-U>set nocursorline nocursorcolumn<CR>n  <Plug>(unimpaired-enable)x & :<C-U>set cursorline cursorcolumn<CR>n  <Plug>(unimpaired-toggle)v & :<C-U>set <C-R>=(&virtualedit =~# "all") ? "virtualedit-=all" : "virtualedit+=all"<CR><CR>n  <Plug>(unimpaired-disable)v & :<C-U>set virtualedit-=all<CR>n  <Plug>(unimpaired-enable)v & :<C-U>set virtualedit+=all<CR>n  <Plug>(unimpaired-toggle)z & :<C-U>setlocal <C-R>=<SNR>31_Toggle("spell")<CR><CR>n  <Plug>(unimpaired-disable)z & :<C-U>setlocal nospell<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)z & :<C-U>setlocal spell<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)w & :<C-U>setlocal <C-R>=<SNR>31_Toggle("wrap")<CR><CR>n  <Plug>(unimpaired-disable)w & :<C-U>setlocal nowrap<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)w & :<C-U>setlocal wrap<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)s & :<C-U>setlocal <C-R>=<SNR>31_Toggle("spell")<CR><CR>n  <Plug>(unimpaired-disable)s & :<C-U>setlocal nospell<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)s & :<C-U>setlocal spell<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)r & :<C-U>setlocal <C-R>=<SNR>31_Toggle("relativenumber")<CR><CR>n  <Plug>(unimpaired-disable)r & :<C-U>setlocal norelativenumber<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)r & :<C-U>setlocal relativenumber<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)n & :<C-U>setlocal <C-R>=<SNR>31_Toggle("number")<CR><CR>n  <Plug>(unimpaired-disable)n & :<C-U>setlocal nonumber<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)n & :<C-U>setlocal number<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)l & :<C-U>setlocal <C-R>=<SNR>31_Toggle("list")<CR><CR>n  <Plug>(unimpaired-disable)l & :<C-U>setlocal nolist<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)l & :<C-U>setlocal list<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)i & :<C-U>set <C-R>=<SNR>31_Toggle("ignorecase")<CR><CR>n  <Plug>(unimpaired-disable)i & :<C-U>set noignorecase<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)i & :<C-U>set ignorecase<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)h & :<C-U>set <C-R>=<SNR>31_Toggle("hlsearch")<CR><CR>n  <Plug>(unimpaired-disable)h & :<C-U>set nohlsearch<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)h & :<C-U>set hlsearch<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)d & :<C-U><C-R>=&diff ? "diffoff" : "diffthis"<CR><CR>n  <Plug>(unimpaired-disable)d & :<C-U>diffoff<CR>n  <Plug>(unimpaired-enable)d & :<C-U>diffthis<CR>n  <Plug>(unimpaired-toggle)| & :<C-U>setlocal <C-R>=<SNR>31_Toggle("cursorcolumn")<CR><CR>n  <Plug>(unimpaired-disable)| & :<C-U>setlocal nocursorcolumn<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)| & :<C-U>setlocal cursorcolumn<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)u & :<C-U>setlocal <C-R>=<SNR>31_Toggle("cursorcolumn")<CR><CR>n  <Plug>(unimpaired-disable)u & :<C-U>setlocal nocursorcolumn<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)u & :<C-U>setlocal cursorcolumn<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)_ & :<C-U>setlocal <C-R>=<SNR>31_Toggle("cursorline")<CR><CR>n  <Plug>(unimpaired-disable)_ & :<C-U>setlocal nocursorline<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)_ & :<C-U>setlocal cursorline<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)- & :<C-U>setlocal <C-R>=<SNR>31_Toggle("cursorline")<CR><CR>n  <Plug>(unimpaired-disable)- & :<C-U>setlocal nocursorline<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)- & :<C-U>setlocal cursorline<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)c & :<C-U>setlocal <C-R>=<SNR>31_Toggle("cursorline")<CR><CR>n  <Plug>(unimpaired-disable)c & :<C-U>setlocal nocursorline<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-enable)c & :<C-U>setlocal cursorline<C-R>=<SNR>31_StatuslineRefresh()<CR><CR>n  <Plug>(unimpaired-toggle)b & :<C-U>set background=<C-R>=&background == "dark" ? "light" : "dark"<CR><CR>n  <Plug>(unimpaired-disable)b & :<C-U>set background=dark<CR>n  <Plug>(unimpaired-enable)b & :<C-U>set background=light<CR>   <Plug>unimpairedMoveSelectionDown * :<C-U>call <SNR>31_MoveSelectionDown(v:count1)<CR>   <Plug>unimpairedMoveSelectionUp * :<C-U>call <SNR>31_MoveSelectionUp(v:count1)<CR>n  <Plug>unimpairedMoveDown * :<C-U>call <SNR>31_Move('+',v:count1,'down')<CR>n  <Plug>unimpairedMoveUp * :<C-U>call <SNR>31_Move('--',v:count1,'up')<CR>   <Plug>(unimpaired-move-selection-down) * :<C-U>call <SNR>31_MoveSelectionDown(v:count1)<CR>   <Plug>(unimpaired-move-selection-up) * :<C-U>call <SNR>31_MoveSelectionUp(v:count1)<CR>n  <Plug>(unimpaired-move-down) * :<C-U>call <SNR>31_Move('+',v:count1,'down')<CR>n  <Plug>(unimpaired-move-up) * :<C-U>call <SNR>31_Move('--',v:count1,'up')<CR>n  <Plug>unimpairedBlankDown * :<C-U>exe <SNR>31_BlankDown()<CR>n  <Plug>unimpairedBlankUp * :<C-U>exe <SNR>31_BlankUp()<CR>n  <Plug>(unimpaired-blank-down) * :<C-U>exe <SNR>31_BlankDown()<CR>n  <Plug>(unimpaired-blank-up) * :<C-U>exe <SNR>31_BlankUp()<CR>o  <Plug>unimpairedContextNext * :<C-U>call <SNR>31_ContextMotion(0)<CR>o  <Plug>unimpairedContextPrevious * :<C-U>call <SNR>31_ContextMotion(1)<CR>x  <Plug>unimpairedContextNext * :<C-U>exe 'normal! gv'|call <SNR>31_Context(0)<CR>x  <Plug>unimpairedContextPrevious * :<C-U>exe 'normal! gv'|call <SNR>31_Context(1)<CR>n  <Plug>unimpairedContextNext * :<C-U>call <SNR>31_Context(0)<CR>n  <Plug>unimpairedContextPrevious * :<C-U>call <SNR>31_Context(1)<CR>o  <Plug>(unimpaired-context-next) * :<C-U>call <SNR>31_ContextMotion(0)<CR>o  <Plug>(unimpaired-context-previous) * :<C-U>call <SNR>31_ContextMotion(1)<CR>v  <Plug>(unimpaired-context-next) * :<C-U>exe 'normal! gv'|call <SNR>31_Context(0)<CR>v  <Plug>(unimpaired-context-previous) * :<C-U>exe 'normal! gv'|call <SNR>31_Context(1)<CR>n  <Plug>(unimpaired-context-next) * :<C-U>call <SNR>31_Context(0)<CR>n  <Plug>(unimpaired-context-previous) * :<C-U>call <SNR>31_Context(1)<CR>n  <Plug>unimpairedDirectoryPrevious * :<C-U>execute <SNR>31_PreviousFileEntry(v:count1)<CR>n  <Plug>unimpairedDirectoryNext * :<C-U>execute <SNR>31_NextFileEntry(v:count1)<CR>n  <Plug>(unimpaired-directory-previous) * :<C-U>execute <SNR>31_PreviousFileEntry(v:count1)<CR>n  <Plug>(unimpaired-directory-next) * :<C-U>execute <SNR>31_NextFileEntry(v:count1)<CR>n  <Plug>unimpairedTPNext * :<C-U>exe "p".(v:count ? v:count : "")."tnext"<CR>n  <Plug>unimpairedTPPrevious * :<C-U>exe "p".(v:count ? v:count : "")."tprevious"<CR>n  <Plug>(unimpaired-ptnext) * :<C-U>exe v:count1 . "ptnext"<CR>n  <Plug>(unimpaired-ptprevious) * :<C-U>exe v:count1 . "ptprevious"<CR>n  <Plug>unimpairedTLast * :<C-U>exe "".(v:count ? v:count : "")."tlast"<CR>n  <Plug>unimpairedTFirst * :<C-U>exe "".(v:count ? v:count : "")."tfirst"<CR>n  <Plug>unimpairedTNext * :<C-U>exe "".(v:count ? v:count : "")."tnext"<CR>n  <Plug>unimpairedTPrevious * :<C-U>exe "".(v:count ? v:count : "")."tprevious"<CR>n  <Plug>(unimpaired-tlast) * :<C-U><C-R>=v:count ? v:count . "trewind" : "tlast"<CR><CR>n  <Plug>(unimpaired-tfirst) * :<C-U><C-R>=v:count ? v:count . "trewind" : "tfirst"<CR><CR>n  <Plug>(unimpaired-tnext) * :<C-U>exe "".(v:count ? v:count : "")."tnext"<CR>n  <Plug>(unimpaired-tprevious) * :<C-U>exe "".(v:count ? v:count : "")."tprevious"<CR>n  <Plug>unimpairedQNFile * :<C-U>exe "".(v:count ? v:count : "")."cnfile"<CR>zvn  <Plug>unimpairedQPFile * :<C-U>exe "".(v:count ? v:count : "")."cpfile"<CR>zvn  <Plug>(unimpaired-cnfile) * :<C-U>exe "".(v:count ? v:count : "")."cnfile"<CR>zvn  <Plug>(unimpaired-cpfile) * :<C-U>exe "".(v:count ? v:count : "")."cpfile"<CR>zvn  <Plug>unimpairedQLast * :<C-U>exe "".(v:count ? v:count : "")."clast"<CR>zvn  <Plug>unimpairedQFirst * :<C-U>exe "".(v:count ? v:count : "")."cfirst"<CR>zvn  <Plug>unimpairedQNext * :<C-U>exe "".(v:count ? v:count : "")."cnext"<CR>zvn  <Plug>unimpairedQPrevious * :<C-U>exe "".(v:count ? v:count : "")."cprevious"<CR>zvn  <Plug>(unimpaired-clast) * :<C-U><C-R>=v:count ? v:count . "cc" : "clast"<CR><CR>zvn  <Plug>(unimpaired-cfirst) * :<C-U><C-R>=v:count ? v:count . "cc" : "cfirst"<CR><CR>zvn  <Plug>(unimpaired-cnext) * :<C-U>exe "".(v:count ? v:count : "")."cnext"<CR>zvn  <Plug>(unimpaired-cprevious) * :<C-U>exe "".(v:count ? v:count : "")."cprevious"<CR>zvn  <Plug>unimpairedLNFile * :<C-U>exe "".(v:count ? v:count : "")."lnfile"<CR>zvn  <Plug>unimpairedLPFile * :<C-U>exe "".(v:count ? v:count : "")."lpfile"<CR>zvn  <Plug>(unimpaired-lnfile) * :<C-U>exe "".(v:count ? v:count : "")."lnfile"<CR>zvn  <Plug>(unimpaired-lpfile) * :<C-U>exe "".(v:count ? v:count : "")."lpfile"<CR>zvn  <Plug>unimpairedLLast * :<C-U>exe "".(v:count ? v:count : "")."llast"<CR>zvn  <Plug>unimpairedLFirst * :<C-U>exe "".(v:count ? v:count : "")."lfirst"<CR>zvn  <Plug>unimpairedLNext * :<C-U>exe "".(v:count ? v:count : "")."lnext"<CR>zvn  <Plug>unimpairedLPrevious * :<C-U>exe "".(v:count ? v:count : "")."lprevious"<CR>zvn  <Plug>(unimpaired-llast) * :<C-U><C-R>=v:count ? v:count . "ll" : "llast"<CR><CR>zvn  <Plug>(unimpaired-lfirst) * :<C-U><C-R>=v:count ? v:count . "ll" : "lfirst"<CR><CR>zvn  <Plug>(unimpaired-lnext) * :<C-U>exe "".(v:count ? v:count : "")."lnext"<CR>zvn  <Plug>(unimpaired-lprevious) * :<C-U>exe "".(v:count ? v:count : "")."lprevious"<CR>zvn  <Plug>unimpairedBLast * :<C-U>exe "".(v:count ? v:count : "")."blast"<CR>n  <Plug>unimpairedBFirst * :<C-U>exe "".(v:count ? v:count : "")."bfirst"<CR>n  <Plug>unimpairedBNext * :<C-U>exe "".(v:count ? v:count : "")."bnext"<CR>n  <Plug>unimpairedBPrevious * :<C-U>exe "".(v:count ? v:count : "")."bprevious"<CR>n  <Plug>(unimpaired-blast) * :<C-U><C-R>=v:count ? v:count . "buffer" : "blast"<CR><CR>n  <Plug>(unimpaired-bfirst) * :<C-U><C-R>=v:count ? v:count . "buffer" : "bfirst"<CR><CR>n  <Plug>(unimpaired-bnext) * :<C-U>exe "".(v:count ? v:count : "")."bnext"<CR>n  <Plug>(unimpaired-bprevious) * :<C-U>exe "".(v:count ? v:count : "")."bprevious"<CR>n  <Plug>unimpairedALast * :<C-U>exe "".(v:count ? v:count : "")."last"<CR>n  <Plug>unimpairedAFirst * :<C-U>exe "".(v:count ? v:count : "")."first"<CR>n  <Plug>unimpairedANext * :<C-U>exe "".(v:count ? v:count : "")."next"<CR>n  <Plug>unimpairedAPrevious * :<C-U>exe "".(v:count ? v:count : "")."previous"<CR>n  <Plug>(unimpaired-last) * :<C-U><C-R>=v:count ? v:count . "argument" : "last"<CR><CR>n  <Plug>(unimpaired-first) * :<C-U><C-R>=v:count ? v:count . "argument" : "first"<CR><CR>n  <Plug>(unimpaired-next) * :<C-U>exe "".(v:count ? v:count : "")."next"<CR>n  <Plug>(unimpaired-previous) * :<C-U>exe "".(v:count ? v:count : "")."previous"<CR>n  <F3>        * <Lua 319: ~/.local/share/nvim/lazy/nvim-dap/lua/dap.lua:577>n  <F2>        * <Lua 318: ~/.local/share/nvim/lazy/nvim-dap/lua/dap.lua:508>n  <F1>        * <Lua 317: ~/.local/share/nvim/lazy/nvim-dap/lua/dap.lua:540>n  <F5>        * <Lua 313: ~/.local/share/nvim/lazy/nvim-dap/lua/dap.lua:864>n  <Plug>fugitive: & <Nop>n  <Plug>fugitive:y<C-G> & :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>s  <Plug>luasnip-jump-prev * <Lua 154: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:57>s  <Plug>luasnip-jump-next * <Lua 153: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:54>s  <Plug>luasnip-prev-choice * <Lua 152: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:51>s  <Plug>luasnip-next-choice * <Lua 151: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:48>s  <Plug>luasnip-expand-snippet * <Lua 150: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:45>s  <Plug>luasnip-expand-or-jump * <Lua 149: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:42>   <Plug>luasnip-expand-repeat * <Lua 147: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:35>n  <Plug>luasnip-delete-check * <Lua 145: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:28>o  <Plug>(leap-backward-x) * <Lua 126: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:55>x  <Plug>(leap-backward-x) * <Lua 125: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:55>n  <Plug>(leap-backward-x) * <Lua 124: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:55>o  <Plug>(leap-forward-x) * <Lua 123: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:54>x  <Plug>(leap-forward-x) * <Lua 122: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:54>n  <Plug>(leap-forward-x) * <Lua 121: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:54>o  <Plug>(leap-backward) * <Lua 120: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:53>x  <Plug>(leap-backward) * <Lua 119: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:53>n  <Plug>(leap-backward) * <Lua 118: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:53>o  <Plug>(leap-forward) * <Lua 117: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:52>x  <Plug>(leap-forward) * <Lua 116: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:52>n  <Plug>(leap-forward) * <Lua 115: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:52>o  <Plug>(leap-cross-window) * <Lua 114: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:46>x  <Plug>(leap-cross-window) * <Lua 113: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:46>n  <Plug>(leap-cross-window) * <Lua 112: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:46>o  <Plug>(leap-from-window) * <Lua 111: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:36>x  <Plug>(leap-from-window) * <Lua 110: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:36>n  <Plug>(leap-from-window) * <Lua 109: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:36>o  <Plug>(leap-backward-till) * <Lua 108: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:30>x  <Plug>(leap-backward-till) * <Lua 107: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:30>n  <Plug>(leap-backward-till) * <Lua 106: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:30>o  <Plug>(leap-backward-to) * <Lua 105: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:24>x  <Plug>(leap-backward-to) * <Lua 104: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:24>n  <Plug>(leap-backward-to) * <Lua 103: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:24>o  <Plug>(leap-forward-till) * <Lua 102: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:18>x  <Plug>(leap-forward-till) * <Lua 101: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:18>n  <Plug>(leap-forward-till) * <Lua 100: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:18>o  <Plug>(leap-forward-to) * <Lua 99: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:10>x  <Plug>(leap-forward-to) * <Lua 98: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:10>n  <Plug>(leap-forward-to) * <Lua 97: ~/.local/share/nvim/lazy/leap.nvim/plugin/init.lua:4>n  <C-S>       * <Lua 91: ~/.config/nvim/lua/custom/plugins/harpoon.lua:13>n  <C-N>       * <Lua 90: ~/.config/nvim/lua/custom/plugins/harpoon.lua:12>n  <C-T>       * <Lua 89: ~/.config/nvim/lua/custom/plugins/harpoon.lua:11>n  <C-H>       * <Lua 88: ~/.config/nvim/lua/custom/plugins/harpoon.lua:10>n  <C-E>       * <Lua 85: ~/.local/share/nvim/lazy/harpoon/lua/harpoon/ui.lua:73>n  <M-a>       * <Lua 84: ~/.local/share/nvim/lazy/harpoon/lua/harpoon/mark.lua:206>n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_directory(vim.fn.expand("%:p"))<CR>n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>